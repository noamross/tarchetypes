% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_download.R
\name{tar_download}
\alias{tar_download}
\alias{tar_download_file}
\alias{tar_url_hash}
\title{Download a file from a remote source, checking for changes
first}
\usage{
tar_download(
  name,
  url,
  destfile = basename(url),
  destdir = ".",
  handle = NULL,
  stop_on_no_internet = FALSE,
  ...
)

tar_download_file(
  url,
  destfile,
  destdir,
  stop_on_no_internet,
  handle = new_handle()
)

tar_url_hash(url, stop_on_no_internet, handle = new_handle())
}
\arguments{
\item{url}{The URL to fetch the file from}

\item{destfile}{Whether to invoke tidy evaluation}

\item{destdir}{the directory to download the file to}

\item{handle}{a handle created by \code{curl::new_handle()} to use when fetching the file
or checking headers. Useful for authentication.}

\item{stop_on_no_internet}{Whether to fail in the absence of an internet connection.
Default is \code{FALSE} and only produces a warning}

\item{...}{other parameters passed to \code{tar_change()}}
}
\value{
A list of two targets, one upstream and one downstream.
The upstream one checks url headers, and the downstream one
downloads the file to it. See the examples for details.
}
\description{
Create a target that downnloads a file if it has changed since
the last attempt, based responds to a change
in an arbitrary value. If the value changes, the target reruns.
}
\details{
\code{tar_download()} creates a pair of targets, one upstream
and one downstream, usingn \code{tar_change()}. always runs and returns
header information (eTag and modified time, if available), to check
if the remote value has changed. This header gets referenced in the
downstream target, which causes the downstream target to download the
if the header information changes. The downstream target has "file" format
and stores the location of te downloaded file The behavior is cancelled if
\code{cue} is \code{tar_cue(depend = FALSE)} or \code{tar_cue(mode = "never")}.
}
\examples{
\dontrun{
# Try it out. The following pipeline should always run
# both targets (x and x_change).
targets::tar_dir({
library(tarchetypes)
targets::tar_script({
  tar_pipeline(
    tar_download(tarzip, url = "https://github.com/wlandau/tarchetypes/archive/master.zip")
  )
})
targets::tar_make()
})
}
}
